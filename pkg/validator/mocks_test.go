// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package validator

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockValidator creates a new instance of MockValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockValidator[T any](t interface {
	mock.TestingT
	Cleanup(func())
}) *MockValidator[T] {
	mock := &MockValidator[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockValidator is an autogenerated mock type for the Validator type
type MockValidator[T any] struct {
	mock.Mock
}

type MockValidator_Expecter[T any] struct {
	mock *mock.Mock
}

func (_m *MockValidator[T]) EXPECT() *MockValidator_Expecter[T] {
	return &MockValidator_Expecter[T]{mock: &_m.Mock}
}

// Validate provides a mock function for the type MockValidator
func (_mock *MockValidator[T]) Validate(config T) *ValidationResult {
	ret := _mock.Called(config)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 *ValidationResult
	if returnFunc, ok := ret.Get(0).(func(T) *ValidationResult); ok {
		r0 = returnFunc(config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ValidationResult)
		}
	}
	return r0
}

// MockValidator_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type MockValidator_Validate_Call[T any] struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - config T
func (_e *MockValidator_Expecter[T]) Validate(config interface{}) *MockValidator_Validate_Call[T] {
	return &MockValidator_Validate_Call[T]{Call: _e.mock.On("Validate", config)}
}

func (_c *MockValidator_Validate_Call[T]) Run(run func(config T)) *MockValidator_Validate_Call[T] {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 T
		if args[0] != nil {
			arg0 = args[0].(T)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockValidator_Validate_Call[T]) Return(validationResult *ValidationResult) *MockValidator_Validate_Call[T] {
	_c.Call.Return(validationResult)
	return _c
}

func (_c *MockValidator_Validate_Call[T]) RunAndReturn(run func(config T) *ValidationResult) *MockValidator_Validate_Call[T] {
	_c.Call.Return(run)
	return _c
}
