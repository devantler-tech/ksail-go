// Code generated by mockery v0.0.0-dev. DO NOT EDIT.
package fluxinstaller

import (
	"context"

	helmclient "github.com/mittwald/go-helm-client"
	"github.com/stretchr/testify/mock"
)

// MockHelmOperator is a mock implementation of HelmOperator.
type MockHelmOperator struct{ mock.Mock }

func NewMockHelmOperator(t mock.TestingT) *MockHelmOperator {
    m := &MockHelmOperator{}
    if tt, ok := t.(interface{ Cleanup(func()) }); ok {
        tt.Cleanup(func() { m.AssertExpectations(t) })
    }
    return m
}

func (m *MockHelmOperator) Install(ctx context.Context, spec *helmclient.ChartSpec) error {
    args := m.Called(ctx, spec)
    return args.Error(0)
}

func (m *MockHelmOperator) Uninstall(name string) error {
    args := m.Called(name)
    return args.Error(0)
}

// MockHelmOperatorFactory is a mock implementation of HelmOperatorFactory.
type MockHelmOperatorFactory struct{ mock.Mock }

func NewMockHelmOperatorFactory(t mock.TestingT) *MockHelmOperatorFactory {
    m := &MockHelmOperatorFactory{}
    if tt, ok := t.(interface{ Cleanup(func()) }); ok {
        tt.Cleanup(func() { m.AssertExpectations(t) })
    }
    return m
}

func (m *MockHelmOperatorFactory) NewFromKubeConf(opts *helmclient.KubeConfClientOptions) (HelmClient, error) {
    args := m.Called(opts)
    var op HelmClient
    if v, ok := args.Get(0).(HelmClient); ok {
        op = v
    }
    return op, args.Error(1)
}
