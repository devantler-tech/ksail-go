// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package v1alpha1

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockConfigSource creates a new instance of MockConfigSource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigSource(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigSource {
	mock := &MockConfigSource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockConfigSource is an autogenerated mock type for the ConfigSource type
type MockConfigSource struct {
	mock.Mock
}

type MockConfigSource_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigSource) EXPECT() *MockConfigSource_Expecter {
	return &MockConfigSource_Expecter{mock: &_m.Mock}
}

// GetString provides a mock function for the type MockConfigSource
func (_mock *MockConfigSource) GetString(key string) string {
	ret := _mock.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for GetString")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func(string) string); ok {
		r0 = returnFunc(key)
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// MockConfigSource_GetString_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetString'
type MockConfigSource_GetString_Call struct {
	*mock.Call
}

// GetString is a helper method to define mock.On call
//   - key string
func (_e *MockConfigSource_Expecter) GetString(key interface{}) *MockConfigSource_GetString_Call {
	return &MockConfigSource_GetString_Call{Call: _e.mock.On("GetString", key)}
}

func (_c *MockConfigSource_GetString_Call) Run(run func(key string)) *MockConfigSource_GetString_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockConfigSource_GetString_Call) Return(s string) *MockConfigSource_GetString_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *MockConfigSource_GetString_Call) RunAndReturn(run func(key string) string) *MockConfigSource_GetString_Call {
	_c.Call.Return(run)
	return _c
}
